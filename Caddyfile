# The Caddyfile is an easy way to configure your Caddy web server.
#
# Unless the file starts with a global options block, the first
# uncommented line is always the address of your site.
#
# To use your own domain name (with automatic HTTPS), first make
# sure your domain's A/AAAA DNS records are properly pointed to
# this machine's public IP, then replace ":80" below with your
# domain name.

# Refer to the Caddy docs for more information:
# https://caddyserver.com/docs/caddyfile

#hydra.nowigence.ai {
  #root * /var/www/html/build
  #@API {
    #not {
      #file {
       #try_files {path} /index.html
    #}
  #}
#}
  #encode zstd gzip
  #reverse_proxy @API localhost:5000
  #file_server
#}

hydra.nowigence.ai


handle /api/* {
  #reverse_proxy /api/* localhost:5000 {
  #reverse_proxy /api/* localhost:5000 157.230.226.6:5000 {
  #reverse_proxy /api/* 157.230.226.6:5000 {
  #reverse_proxy /api/* https://hydra.nowigence.ai {
    #lb_policy least_conn
  #}
  reverse_proxy /api/* fastify-backend:80 {
    #lb_policy least_conn
  }
}

handle /graphql {
  #reverse_proxy /graphql localhost:5000 {
  #reverse_proxy /graphql localhost:5000 157.230.226.6:5000 {
  #reverse_proxy /graphql 157.230.226.6:5000 {
  #reverse_proxy /graphql https://hydra.nowigence.ai {
  #  lb_policy least_conn
  #}
  
  reverse_proxy /graphql fastify-backend:80 {
    #lb_policy least_conn
  }
}

handle * {
  #root * /var/www/html/build
  #root * ./testing-fastify-ui/build
  root * /usr/share/caddy/html
  encode zstd gzip
  try_files {path} /index.html

  file_server
}

handle_errors {
  respond "{http.error.status_code} {http.error.status_text}"
}






        # The domain you want to use
        #hydra.nowigence.ai
        # # set the root directory
#       root * /var/www/html/build
        # # Compress responses according to Accept-Encoding headers to speed
        # # things up where possible
#       encode gzip zstd
        # # Configure path router support for Angular or another SPA framework
#       try_files {path} {path}/ /index.html
        # # Send every request to starting with '/api/' to the backend 
#       reverse_proxy /api/* localhost:5000
        # # Serve everything else like assets from the file system 
#       file_server